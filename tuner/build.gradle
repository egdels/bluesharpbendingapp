/*
 * Copyright (c) 2023 Christian Kierdorf
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the “Software”),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 */
plugins {
    id 'application'
    id 'org.beryx.runtime' version '1.12.7'
    id 'org.openjfx.javafxplugin' version '0.1.0'  // JavaFX Plugin
}

javafx {
    version = '21.0.6'  // Wählen Sie die passende Version
    modules = [
            'javafx.controls',
            'javafx.fxml',
            'javafx.graphics'
    ]
}

dependencies {
    // Adds dependency on the 'base' module
    implementation project(':base')
    implementation project(':desktop')
}

application {
    mainClass = 'de.schliweb.tuner.TunerApp'
    applicationName = 'TunerApp'
}

runtime {
    modules = [
            'javafx.controls',
            'javafx.fxml',
            'javafx.graphics'
    ]
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        noConsole = true
    }

    jpackage {

        def currentOs = org.gradle.internal.os.OperatingSystem.current()
        def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
        imageOptions += ['--icon', "src/main/resources/tunerapp.$imgType"]
        installerOptions += ['--resource-dir', "src/main/resources"]
        // Defines the application's vendor/creator
        installerOptions += ['--vendor', 'letsbend.de']

        imageName = 'tuner'
        installerName = 'tuner'
        // Platform-specific installer options:
        if (currentOs.windows) {
            // For Windows: Enables per-user installation, directory chooser, and Start Menu/Desktop shortcuts
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        } else if (currentOs.linux) {
            // For Linux: Creates a `.deb` package with proper settings, including shortcuts
            installerOptions += ['--type', 'deb', '--linux-package-name', 'tuner', '--linux-app-release', version, '--linux-deb-maintainer', 'christian.kierdorf@schliweb.de', '--linux-shortcut']
        } else if (currentOs.macOsX) {
            // For macOS: Specifies the package name for Mac
            installerOptions += ['--mac-package-name', 'tuner', '--mac-package-identifier', 'tuner']
        }
    }
}

test {
    useJUnitPlatform()
}

